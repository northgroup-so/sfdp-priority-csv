name: Update SFDP CSV

on:
    schedule:
        - cron: "0 */3 * * *"
    workflow_dispatch:

permissions:
    contents: write

jobs:
    update:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Generate CSV files
              shell: bash
              run: |
                  set -euo pipefail
                  mkdir -p data
                  curl --silent --location 'https://api.solana.org/api/community/v1/sfdp_participants' \
                  | jq -r '["No","Mainnet Pubkey","state","Onboarding Priority","Onboarded @ Epoch"],
                           (to_entries[]
                            | select(.value.state!="Rejected" and .value.state!="Retired")
                            | [.key+1, .value.mainnetBetaPubkey, .value.state, (.value.onboardingNumber // "null"), (.value.sfdp2OnboardingEpoch // "null")])
                           | @csv' \
                  > data/sfdp_participants.csv
                  ts=$(date -u +'%Y-%m-%dT%H')
                  cp data/sfdp_participants.csv "data/sfdp_participants_${ts}.csv"

            - name: Analyze changes (new participants & state changes)
              id: diff
              shell: bash
              run: |
                  set -euo pipefail
                  if git show HEAD:data/sfdp_participants.csv > old.csv 2>/dev/null; then
                    :
                  else
                    : > old.csv
                  fi
                  awk -F, 'NR>1 {gsub(/"/,""); print $2","$3}' old.csv | sort -t, -k1,1 > old_map.txt || true
                  awk -F, 'NR>1 {gsub(/"/,""); print $2","$3}' data/sfdp_participants.csv | sort -t, -k1,1 > new_map.txt
                  cut -d, -f1 old_map.txt > old_keys.txt || true
                  cut -d, -f1 new_map.txt > new_keys.txt
                  comm -13 <(sort old_keys.txt 2>/dev/null || true) <(sort new_keys.txt) > new_pubkeys.txt
                  join -t, -j1 -o 1.1,1.2,2.2 old_map.txt new_map.txt > joined.txt || true
                  awk -F, '$2 != $3 {print $1":"$2"->"$3}' joined.txt > state_changes.txt
                  NEW_CNT=$(wc -l < new_pubkeys.txt 2>/dev/null | xargs || echo 0)
                  CHG_CNT=$(wc -l < state_changes.txt 2>/dev/null | xargs || echo 0)
                  list_join() { paste -sd',' -; }
                  NEW_LIST=$( (head -n 50 new_pubkeys.txt 2>/dev/null || true) | list_join )
                  CHG_LIST=$(head -n 50 state_changes.txt 2>/dev/null || true)
                  if [ "${NEW_CNT:-0}" -gt 50 ]; then
                    NEW_LIST="${NEW_LIST}, ...(+$((NEW_CNT-50)) more)"
                  fi
                  if [ "${CHG_CNT:-0}" -gt 50 ]; then
                    CHG_LIST="${CHG_LIST}\n...(+$((CHG_CNT-50)) more)"
                  fi
                  SUBJECT="Update SFDP CSV ($(date -u '+%Y-%m-%d %H:%M:%S UTC'))"
                  BODY=""
                  if [ "${NEW_CNT:-0}" -gt 0 ]; then
                    BODY="${BODY}New participants (${NEW_CNT}): ${NEW_LIST}\n"
                  fi
                  if [ "${CHG_CNT:-0}" -gt 0 ]; then
                    BODY="${BODY}State changes (${CHG_CNT}):\n${CHG_LIST}\n"
                  fi
                  if [ -z "$BODY" ]; then
                    BODY="No new participants or state changes detected."
                  fi
                  {
                    echo "subject<<EOF"
                    echo "$SUBJECT"
                    echo "EOF"
                    echo "body<<EOF"
                    echo -e "$BODY"
                    echo "EOF"
                  } >> "$GITHUB_OUTPUT"

            - name: Commit & push with summary
              shell: bash
              run: |
                  set -euo pipefail
                  git config user.name  "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git add data/*.csv
                  if git diff --cached --quiet; then
                    echo "No changes to commit."
                  else
                    git commit -m "${{ steps.diff.outputs.subject }}" -m "${{ steps.diff.outputs.body }}"
                    git push
                  fi
